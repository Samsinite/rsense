diff -ruN -x ri -x cache -x DefaultRubyParser.java -x YyTables.java -x PATH ../jruby-1.4.0-orig/src/org/jruby/ast/Node.java ../jruby-1.4.0/src/org/jruby/ast/Node.java
--- ../jruby-1.4.0-orig/src/org/jruby/ast/Node.java	2009-11-03 03:15:09.000000000 +0900
+++ ../jruby-1.4.0/src/org/jruby/ast/Node.java	2010-01-25 21:30:49.463049702 +0900
@@ -35,6 +35,7 @@
 
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Collections;
 
 import org.jruby.Ruby;
 import org.jruby.ast.types.INameNode;
@@ -45,6 +46,7 @@
 import org.jruby.runtime.Block;
 import org.jruby.runtime.ThreadContext;
 import org.jruby.runtime.builtin.IRubyObject;
+import org.jruby.util.ByteList;
 
 /**
  * Base class for all Nodes in the AST
@@ -54,6 +56,7 @@
     static final List<Node> EMPTY_LIST = new ArrayList<Node>();
     
     private ISourcePosition position;
+    private List<ByteList> commentList;
 
     public Node(ISourcePosition position) {
         assert position != null;
@@ -70,7 +73,15 @@
     public void setPosition(ISourcePosition position) {
         this.position = position;
     }
-    
+
+    public List<ByteList> getCommentList() {
+        return commentList == null ? Collections.<ByteList>emptyList() : commentList;
+    }
+
+    public void setCommentList(List<ByteList> commentList) {
+        this.commentList = commentList;
+    }
+
     public abstract Object accept(NodeVisitor visitor);
     public abstract List<Node> childNodes();
 
diff -ruN -x ri -x cache -x DefaultRubyParser.java -x YyTables.java -x PATH ../jruby-1.4.0-orig/src/org/jruby/lexer/yacc/RubyYaccLexer.java ../jruby-1.4.0/src/org/jruby/lexer/yacc/RubyYaccLexer.java
--- ../jruby-1.4.0-orig/src/org/jruby/lexer/yacc/RubyYaccLexer.java	2009-11-03 03:15:10.000000000 +0900
+++ ../jruby-1.4.0/src/org/jruby/lexer/yacc/RubyYaccLexer.java	2010-01-26 17:56:26.835726305 +0900
@@ -38,6 +38,8 @@
 import java.io.IOException;
 
 import java.math.BigInteger;
+import java.util.List;
+import java.util.ArrayList;
 import java.util.HashMap;
 
 import org.jcodings.Encoding;
@@ -221,6 +223,8 @@
     // this before use.
     private StringBuilder tokenBuffer = new StringBuilder(60);
 
+    private List<ByteList> commentList;
+
     private StackState conditionState = new StackState();
     private StackState cmdArgumentState = new StackState();
     private StrTerm lex_strterm;
@@ -382,6 +386,14 @@
         this.lex_state = state;
     }
 
+    public List<ByteList> getCommentList() {
+        return commentList;
+    }
+
+    public void setCommentList(List<ByteList> commentList) {
+        this.commentList = commentList;
+    }
+
     public StackState getCmdArgumentState() {
         return cmdArgumentState;
     }
@@ -828,6 +840,23 @@
 
         loop: for(;;) {
             c = src.read();
+
+            if (c == '#') {
+                if (commentList == null) {
+                    commentList = new ArrayList<ByteList>();
+                }
+
+                ByteList buffer = new ByteList();
+                while ((c = src.read()) != EOF) {
+                    if (c == '\n') {
+                        break;
+                    } else {
+                        buffer.append((byte) c);
+                    }
+                }
+                commentList.add(buffer);
+            }
+
             switch(c) {
             case '\000': /* NUL */
             case '\004': /* ^D */
diff -ruN -x ri -x cache -x DefaultRubyParser.java -x YyTables.java -x PATH ../jruby-1.4.0-orig/src/org/jruby/parser/DefaultRubyParser.y ../jruby-1.4.0/src/org/jruby/parser/DefaultRubyParser.y
--- ../jruby-1.4.0-orig/src/org/jruby/parser/DefaultRubyParser.y	2009-11-03 03:15:10.000000000 +0900
+++ ../jruby-1.4.0/src/org/jruby/parser/DefaultRubyParser.y	2010-01-28 00:49:10.412527831 +0900
@@ -310,9 +310,11 @@
 stmts         : none
               | stmt {
                   $$ = support.newline_node($1, getPosition($1));
+                  lexer.setCommentList(null);
               }
               | stmts terms stmt {
 	          $$ = support.appendToBlock($1, support.newline_node($3, getPosition($3)));
+                  lexer.setCommentList(null);
               }
               | error stmt {
                   $$ = $2;
@@ -1142,10 +1144,13 @@
                       yyerror("class definition in method body");
                   }
 		  support.pushLocalScope();
+                  support.pushCommentList(lexer.getCommentList());
               } bodystmt kEND {
                   Node body = $5 == null ? NilImplicitNode.NIL : $5;
 
-                  $$ = new ClassNode(getPosition($1), $<Colon3Node>2, support.getCurrentScope(), body, $3);
+                  Node node = new ClassNode(getPosition($1), $<Colon3Node>2, support.getCurrentScope(), body, $3);
+                  node.setCommentList(support.popCommentList());
+                  $$ = node;
                   support.popCurrentScope();
               }
               | kCLASS tLSHFT expr {
@@ -1166,21 +1171,27 @@
                       yyerror("module definition in method body");
                   }
 		  support.pushLocalScope();
+                  support.pushCommentList(lexer.getCommentList());
               } bodystmt kEND {
                   Node body = $4 == null ? NilImplicitNode.NIL : $4;
 
-                  $$ = new ModuleNode(getPosition($1), $<Colon3Node>2, support.getCurrentScope(), body);
+                  Node node = new ModuleNode(getPosition($1), $<Colon3Node>2, support.getCurrentScope(), body);
+                  node.setCommentList(support.popCommentList());
+                  $$ = node;
                   support.popCurrentScope();
               }
 	      | kDEF fname {
                   support.setInDef(true);
 		  support.pushLocalScope();
+                  support.pushCommentList(lexer.getCommentList());
               } f_arglist bodystmt kEND {
                   // TODO: We should use implicit nil for body, but problem (punt til later)
                   Node body = $5; //$5 == null ? NilImplicitNode.NIL : $5;
 
                   /* NOEX_PRIVATE for toplevel */
-                  $$ = new DefnNode(getPosition($1), new ArgumentNode($2.getPosition(), (String) $2.getValue()), $<ArgsNode>4, support.getCurrentScope(), body);
+                  Node node = new DefnNode(getPosition($1), new ArgumentNode($2.getPosition(), (String) $2.getValue()), $<ArgsNode>4, support.getCurrentScope(), body);
+                  node.setCommentList(support.popCommentList());
+                  $$ = node;
                   support.popCurrentScope();
                   support.setInDef(false);
               }
@@ -1189,12 +1200,15 @@
               } fname {
                   support.setInSingle(support.getInSingle() + 1);
 		  support.pushLocalScope();
+                  support.pushCommentList(lexer.getCommentList());
                   lexer.setState(LexState.EXPR_END); /* force for args */
               } f_arglist bodystmt kEND {
                   // TODO: We should use implicit nil for body, but problem (punt til later)
                   Node body = $8; //$8 == null ? NilImplicitNode.NIL : $8;
 
-                  $$ = new DefsNode(getPosition($1), $2, new ArgumentNode($5.getPosition(), (String) $5.getValue()), $<ArgsNode>7, support.getCurrentScope(), body);
+                  Node node = new DefsNode(getPosition($1), $2, new ArgumentNode($5.getPosition(), (String) $5.getValue()), $<ArgsNode>7, support.getCurrentScope(), body);
+                  node.setCommentList(support.popCommentList());
+                  $$ = node;
                   support.popCurrentScope();
                   support.setInSingle(support.getInSingle() - 1);
               }
@@ -1882,3 +1896,12 @@
         return lexer.getPosition();
     }
 }
+
+
+
+
+
+
+
+
+
diff -ruN -x ri -x cache -x DefaultRubyParser.java -x YyTables.java -x PATH ../jruby-1.4.0-orig/src/org/jruby/parser/ParserSupport.java ../jruby-1.4.0/src/org/jruby/parser/ParserSupport.java
--- ../jruby-1.4.0-orig/src/org/jruby/parser/ParserSupport.java	2009-11-03 03:15:10.000000000 +0900
+++ ../jruby-1.4.0/src/org/jruby/parser/ParserSupport.java	2010-02-05 23:11:47.584267125 +0900
@@ -35,6 +35,9 @@
  ***** END LICENSE BLOCK *****/
 package org.jruby.parser;
 
+import java.util.List;
+import java.util.Stack;
+
 import org.jruby.CompatVersion;
 import org.jruby.ast.AndNode;
 import org.jruby.ast.ArgsPreOneArgNode;
@@ -191,6 +194,16 @@
     private ParserConfiguration configuration;
     private RubyParserResult result;
 
+    private Stack<List<ByteList>> commentListStack = new Stack<List<ByteList>>();
+
+    public void pushCommentList(List<ByteList> commentList) {
+        commentListStack.push(commentList);
+    }
+
+    public List<ByteList> popCommentList() {
+        return commentListStack.pop();
+    }
+
     public void reset() {
         inSingleton = 0;
         inDefinition = false;
diff -ruN -x ri -x cache -x DefaultRubyParser.java -x YyTables.java -x PATH ../jruby-1.4.0-orig/tool/yytables.el ../jruby-1.4.0/tool/yytables.el
--- ../jruby-1.4.0-orig/tool/yytables.el	1970-01-01 09:00:00.000000000 +0900
+++ ../jruby-1.4.0/tool/yytables.el	2010-01-21 18:34:36.127027705 +0900
@@ -0,0 +1,42 @@
+(defun yytables (parser-file yytables-file)
+  (interactive (read-file-name "Location of parser.java: ")
+               (read-file-name "Location of yytables.java: "))
+  (loop with start
+        with end
+        with unit
+        for tabname in '("yyTable" "yyCheck")
+        do
+        (find-file parser-file)
+        (goto-char (point-min))
+        (search-forward (format "%s = " tabname))
+        (setq start (point))
+        (forward-sexp)
+        (backward-char)
+        (setq end (make-marker))
+        (set-marker end (point))
+        (loop with lines = (count-lines start end)
+              with div = 4
+              with unit = (/ lines div)
+              with beg
+              with contents
+              for n below div
+              do
+              (goto-char start)
+              (forward-line)
+              (setq beg (point))
+              (unless (re-search-forward "\n" end t unit)
+                (goto-char end))
+              (setq contents (buffer-substring beg (point)))
+              (delete-region beg (point))
+              (with-current-buffer (find-file-noselect yytables-file)
+                (goto-char (point-min))
+                (search-forward (format "%s%s() {" tabname (1+ n)))
+                (search-forward "short[] ")
+                (kill-sexp)
+                (insert "{\n" contents "}")))
+        (goto-char end)
+        (delete-backward-char 2)
+        (delete-char 1)
+        (insert (format "YyTables.%s()" tabname))))
+                
+              
